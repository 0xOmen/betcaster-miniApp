export const BETCASTER_ABI = [
  {
    inputs: [{ internalType: "uint256", name: "protocolFee", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "Betcaster__BetAmountCannotBeZero", type: "error" },
  { inputs: [], name: "Betcaster__BetAmountMismatch", type: "error" },
  { inputs: [], name: "Betcaster__CannotBeZeroAddress", type: "error" },
  {
    inputs: [],
    name: "Betcaster__FeesCannotBeGreaterThan10000",
    type: "error",
  },
  { inputs: [], name: "Betcaster__NotArbiterManagementEngine", type: "error" },
  { inputs: [], name: "Betcaster__NotBetManagementEngine", type: "error" },
  { inputs: [], name: "Betcaster__ProtocolPaused", type: "error" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "token", type: "address" }],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "arbiterManagementEngine",
        type: "address",
      },
    ],
    name: "ArbiterManagementEngineSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "betManagementEngine",
        type: "address",
      },
    ],
    name: "BetManagementEngineSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_PRECISION",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betNumber", type: "uint256" },
      { internalType: "enum BetTypes.Status", name: "_status", type: "uint8" },
    ],
    name: "arbiterUpdateBetStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betAmount", type: "uint256" },
      { internalType: "uint256", name: "_arbiterFee", type: "uint256" },
    ],
    name: "calculateArbiterPayment",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betAmount", type: "uint256" },
      { internalType: "uint256", name: "_protocolFee", type: "uint256" },
    ],
    name: "calculateProtocolRake",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betNumber", type: "uint256" },
      {
        components: [
          { internalType: "address", name: "maker", type: "address" },
          { internalType: "address", name: "taker", type: "address" },
          { internalType: "address", name: "arbiter", type: "address" },
          { internalType: "address", name: "betTokenAddress", type: "address" },
          { internalType: "uint256", name: "betAmount", type: "uint256" },
          {
            internalType: "address",
            name: "takerBetTokenAddress",
            type: "address",
          },
          { internalType: "uint256", name: "takerBetAmount", type: "uint256" },
          { internalType: "bool", name: "canSettleEarly", type: "bool" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "uint256", name: "takerDeadline", type: "uint256" },
          { internalType: "uint256", name: "endTime", type: "uint256" },
          {
            internalType: "enum BetTypes.Status",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "protocolFee", type: "uint256" },
          { internalType: "uint256", name: "arbiterFee", type: "uint256" },
          { internalType: "string", name: "betAgreement", type: "string" },
        ],
        internalType: "struct BetTypes.Bet",
        name: "_bet",
        type: "tuple",
      },
    ],
    name: "createBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_user", type: "address" },
      { internalType: "address", name: "_betTokenAddress", type: "address" },
      { internalType: "uint256", name: "_betAmount", type: "uint256" },
    ],
    name: "depositToBetcaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getArbiterManagementEngine",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "getBet",
    outputs: [
      {
        components: [
          { internalType: "address", name: "maker", type: "address" },
          { internalType: "address", name: "taker", type: "address" },
          { internalType: "address", name: "arbiter", type: "address" },
          { internalType: "address", name: "betTokenAddress", type: "address" },
          { internalType: "uint256", name: "betAmount", type: "uint256" },
          {
            internalType: "address",
            name: "takerBetTokenAddress",
            type: "address",
          },
          { internalType: "uint256", name: "takerBetAmount", type: "uint256" },
          { internalType: "bool", name: "canSettleEarly", type: "bool" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "uint256", name: "takerDeadline", type: "uint256" },
          { internalType: "uint256", name: "endTime", type: "uint256" },
          {
            internalType: "enum BetTypes.Status",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "protocolFee", type: "uint256" },
          { internalType: "uint256", name: "arbiterFee", type: "uint256" },
          { internalType: "string", name: "betAgreement", type: "string" },
        ],
        internalType: "struct BetTypes.Bet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBetManagementEngine",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBetNumber",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEmergencyCancelCooldown",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPauseStatus",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolFeeDepositAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseBetNumber",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s_protocolFee",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_arbiterManagementEngine",
        type: "address",
      },
    ],
    name: "setArbiterManagementEngine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "setBetArbiterFeeToZero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_betManagementEngine",
        type: "address",
      },
    ],
    name: "setBetManagementEngine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_emergencyCancelCooldown",
        type: "uint256",
      },
    ],
    name: "setEmergencyCancelCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_protocolFee", type: "uint256" },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolFeeDepositAddress",
        type: "address",
      },
    ],
    name: "setProtocolFeeDepositAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_amount", type: "uint256" },
      { internalType: "address", name: "_arbiter", type: "address" },
      { internalType: "address", name: "_betTokenAddress", type: "address" },
    ],
    name: "transferTokensToArbiter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_user", type: "address" },
      { internalType: "address", name: "_betTokenAddress", type: "address" },
      { internalType: "uint256", name: "_betAmount", type: "uint256" },
    ],
    name: "transferTokensToUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betNumber", type: "uint256" },
      {
        components: [
          { internalType: "address", name: "maker", type: "address" },
          { internalType: "address", name: "taker", type: "address" },
          { internalType: "address", name: "arbiter", type: "address" },
          { internalType: "address", name: "betTokenAddress", type: "address" },
          { internalType: "uint256", name: "betAmount", type: "uint256" },
          {
            internalType: "address",
            name: "takerBetTokenAddress",
            type: "address",
          },
          { internalType: "uint256", name: "takerBetAmount", type: "uint256" },
          { internalType: "bool", name: "canSettleEarly", type: "bool" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "uint256", name: "takerDeadline", type: "uint256" },
          { internalType: "uint256", name: "endTime", type: "uint256" },
          {
            internalType: "enum BetTypes.Status",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "protocolFee", type: "uint256" },
          { internalType: "uint256", name: "arbiterFee", type: "uint256" },
          { internalType: "string", name: "betAgreement", type: "string" },
        ],
        internalType: "struct BetTypes.Bet",
        name: "_bet",
        type: "tuple",
      },
    ],
    name: "updateBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betNumber", type: "uint256" },
      { internalType: "address", name: "_arbiter", type: "address" },
    ],
    name: "updateBetArbiter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betNumber", type: "uint256" },
      { internalType: "enum BetTypes.Status", name: "_status", type: "uint8" },
    ],
    name: "updateBetStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betNumber", type: "uint256" },
      { internalType: "address", name: "_taker", type: "address" },
    ],
    name: "updateBetTaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "updateBetTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

// Contract address on Base blockchain
export const BETCASTER_ADDRESS =
  "0x72E9f64d8849c1FC0819C48b08599f74Ec9b39eF" as const;
