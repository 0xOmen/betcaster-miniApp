export const BET_MANAGEMENT_ENGINE_ABI = [
  {
    inputs: [{ internalType: "address", name: "_betcaster", type: "address" }],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "BetManagementEngine__BetAmountMismatch", type: "error" },
  {
    inputs: [],
    name: "BetManagementEngine__BetAmountMustBeGreaterThanZero",
    type: "error",
  },
  { inputs: [], name: "BetManagementEngine__BetNotClaimable", type: "error" },
  { inputs: [], name: "BetManagementEngine__BetNotInProcess", type: "error" },
  {
    inputs: [],
    name: "BetManagementEngine__BetNotWaitingForArbiter",
    type: "error",
  },
  {
    inputs: [],
    name: "BetManagementEngine__BetNotWaitingForTaker",
    type: "error",
  },
  {
    inputs: [],
    name: "BetManagementEngine__BetTokenAddressCannotBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "BetManagementEngine__EndTimeMustBeInTheFuture",
    type: "error",
  },
  {
    inputs: [],
    name: "BetManagementEngine__MakerCannotBeZeroAddress",
    type: "error",
  },
  { inputs: [], name: "BetManagementEngine__NotMaker", type: "error" },
  { inputs: [], name: "BetManagementEngine__NotMakerOrTaker", type: "error" },
  { inputs: [], name: "BetManagementEngine__NotTaker", type: "error" },
  { inputs: [], name: "BetManagementEngine__StillInCooldown", type: "error" },
  { inputs: [], name: "BetManagementEngine__StringTooLong", type: "error" },
  {
    inputs: [],
    name: "BetManagementEngine__TakerCannotBeArbiterOrMaker",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  { inputs: [], name: "ReentrancyGuardReentrantCall", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "betNumber",
        type: "uint256",
      },
      {
        components: [
          { internalType: "address", name: "maker", type: "address" },
          { internalType: "address", name: "taker", type: "address" },
          { internalType: "address", name: "arbiter", type: "address" },
          { internalType: "address", name: "betTokenAddress", type: "address" },
          { internalType: "uint256", name: "betAmount", type: "uint256" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "uint256", name: "endTime", type: "uint256" },
          {
            internalType: "enum BetTypes.Status",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "protocolFee", type: "uint256" },
          { internalType: "uint256", name: "arbiterFee", type: "uint256" },
          { internalType: "string", name: "betAgreement", type: "string" },
        ],
        indexed: false,
        internalType: "struct BetTypes.Bet",
        name: "bet",
        type: "tuple",
      },
    ],
    name: "BetAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "betNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "calledBy",
        type: "address",
      },
      {
        components: [
          { internalType: "address", name: "maker", type: "address" },
          { internalType: "address", name: "taker", type: "address" },
          { internalType: "address", name: "arbiter", type: "address" },
          { internalType: "address", name: "betTokenAddress", type: "address" },
          { internalType: "uint256", name: "betAmount", type: "uint256" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "uint256", name: "endTime", type: "uint256" },
          {
            internalType: "enum BetTypes.Status",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "protocolFee", type: "uint256" },
          { internalType: "uint256", name: "arbiterFee", type: "uint256" },
          { internalType: "string", name: "betAgreement", type: "string" },
        ],
        indexed: false,
        internalType: "struct BetTypes.Bet",
        name: "bet",
        type: "tuple",
      },
    ],
    name: "BetCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "betNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum BetTypes.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "BetClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "betNumber",
        type: "uint256",
      },
      {
        components: [
          { internalType: "address", name: "maker", type: "address" },
          { internalType: "address", name: "taker", type: "address" },
          { internalType: "address", name: "arbiter", type: "address" },
          { internalType: "address", name: "betTokenAddress", type: "address" },
          { internalType: "uint256", name: "betAmount", type: "uint256" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "uint256", name: "endTime", type: "uint256" },
          {
            internalType: "enum BetTypes.Status",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "protocolFee", type: "uint256" },
          { internalType: "uint256", name: "arbiterFee", type: "uint256" },
          { internalType: "string", name: "betAgreement", type: "string" },
        ],
        indexed: false,
        internalType: "struct BetTypes.Bet",
        name: "bet",
        type: "tuple",
      },
    ],
    name: "BetCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "betNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "calledBy",
        type: "address",
      },
      {
        components: [
          { internalType: "address", name: "maker", type: "address" },
          { internalType: "address", name: "taker", type: "address" },
          { internalType: "address", name: "arbiter", type: "address" },
          { internalType: "address", name: "betTokenAddress", type: "address" },
          { internalType: "uint256", name: "betAmount", type: "uint256" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "uint256", name: "endTime", type: "uint256" },
          {
            internalType: "enum BetTypes.Status",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "protocolFee", type: "uint256" },
          { internalType: "uint256", name: "arbiterFee", type: "uint256" },
          { internalType: "string", name: "betAgreement", type: "string" },
        ],
        indexed: false,
        internalType: "struct BetTypes.Bet",
        name: "bet",
        type: "tuple",
      },
    ],
    name: "BetForfeited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "acceptBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_betNumber", type: "uint256" },
      { internalType: "address", name: "_taker", type: "address" },
      { internalType: "address", name: "_arbiter", type: "address" },
      { internalType: "uint256", name: "_endTime", type: "uint256" },
      { internalType: "string", name: "_betAgreement", type: "string" },
    ],
    name: "changeBetParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "claimBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_taker", type: "address" },
      { internalType: "address", name: "_arbiter", type: "address" },
      { internalType: "address", name: "_betTokenAddress", type: "address" },
      { internalType: "uint256", name: "_betAmount", type: "uint256" },
      { internalType: "uint256", name: "_endTime", type: "uint256" },
      { internalType: "uint256", name: "_protocolFee", type: "uint256" },
      { internalType: "uint256", name: "_arbiterFee", type: "uint256" },
      { internalType: "string", name: "_betAgreement", type: "string" },
    ],
    name: "createBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "emergencyCancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "_string", type: "string" }],
    name: "enforceStringLength",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "forfeitBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBetcaster",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "makerCancelBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_betNumber", type: "uint256" }],
    name: "noArbiterCancelBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

// Contract address on Base blockchain
export const BET_MANAGEMENT_ENGINE_ADDRESS =
  "0xca450EF7E33b74e9f086f8C5B4955909cbdE50D9" as const;
